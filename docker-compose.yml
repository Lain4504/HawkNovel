version: "3"
services:
  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka
    hostname: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  es8:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:8.17.0'
    container_name: es8
    environment:
      - node.name=es8
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    networks:
      - elastic
  kib8:
    image: 'docker.elastic.co/kibana/kibana:8.17.0'
    container_name: kib8
    environment:
      - node.name=kib8
      - cluster.name=es-docker-cluster
      - ELASTICSEARCH_HOSTS=http://es8:9200
    ports:
      - '5601:5601'
    networks:
      - elastic
    depends_on:
      - es8
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    networks:
      - elastic
  mysql:
    image: mysql:8.0.39-debian
    container_name: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: identity
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
volumes:
  data:
    driver: local
  mongo-data:
    driver: local
  mysql-data:
    driver: local
networks:
  elastic:
    driver: bridge